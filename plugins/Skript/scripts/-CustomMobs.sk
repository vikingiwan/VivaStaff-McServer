#------------------------------------------------------------
#                     More Mobs 2.0
#                       by Xenons
#             Add Extra mobs to your server!
#------------------------------------------------------------

#------------------------------------------------------------
# All here is editable!
#------------------------------------------------------------

options:
    #---------------------------------------------------------------------------
    #Logo will be displayed before each message!
    logo: &5CustomMobs&f
    
    #-----------------
    #Mob Settings
    #-----------------
    firedemon: true
    firedemon-name: &c&lFire Demon
    firedemon-drops: fire charge
    firedemon-health: 30

    wraith: true
    wraith-name: &8Wraith
    wraith-drops: wither skeleton skull
    wraith-health: 35

    greatgolem: true
    greatgolem-name: &7Great Golem

    megazombie: true
    megazombie-name: &2&lMega Zombie

    zombiehorse: true
    zombiehorse-name: &2&lZombie Horse

    skeletonhorse: true
    skeletonhorse-name: &f&lSkeleton Horse

    firerat: true
    firerat-name: &cFire Rat
    firerat-drops: gold nugget
    firerat-health: 20

    ogre: true
    ogre-name: &2Ogre
    ogre-drops: green dye
    ogre-health: 25

    witheredspider: true
    witheredspider-name: &8Withered Spider
    witheredspider-drops: coal
    witheredspider-health: 20

    firespider: true
    firespider-name: &cFire Spider
    firespider-drops: charcoal
    firespider-health: 22

    megacreeper: true
    megacreeper-name: &a&lMega Creeper
    megacreeper-drops: gunpowder
    megacreeper-health: 14

    flyingcreeper: true
    flyingcreeper-name: &b&lFlying Creeper
    flyingcreeper-drops: gunpowder
    flyingcreeper-health: 12

    flyingwitch: true
    flyingwitch-name: &5&lFlying Witch
    flyingwitch-drops: redstone
    flyingwitch-health: 16
    #---------------------------------------------------------------------------

on load:
    set {more.mobs::drops::firedemon} to {@firedemon-drops}
    set {more.mobs::drops::wraith} to {@wraith-drops}
    set {more.mobs::drops::firerat} to {@firerat-drops}
    set {more.mobs::drops::ogre} to {@ogre-drops}
    set {more.mobs::drops::witheredspider} to {@witheredspider-drops}
    set {more.mobs::drops::firespider} to {@firespider-drops}
    set {more.mobs::drops::megacreeper} to {@megacreeper-drops}
    set {more.mobs::drops::flyingcreeper} to {@flyingcreeper-drops}
    set {more.mobs::drops::flyingwitch} to {@flyingwitch-drops}

#------------------------------------------------------------
# DO NOT TOUCH anything after this!
#------------------------------------------------------------


#=============================================
# Functions
#=============================================

function addEntity(euid: text, ee: entity):
    add {_ee} to {more.mobs.despawnsys::*}
    set {_uuid} to uuid of {_ee}
    set {more.mobs.despawn.uuids::%{_uuid}%} to {_uuid}
    set {more.mob.timer::%{_ee}%} to now
    stop

function giveDrops(ent: text, v: text, l: location):
    if {more.mobs::typeof::%{_ent}%} is set:
        if {more.mobs::drops::%{more.mobs::typeof::%{_ent}%}%} is set:
            set {_drops} to "%{more.mobs::drops::%{more.mobs::typeof::%{_ent}%}%}%" parsed as item

            drop {_drops} at {_l}
            clear {more.mobs::typeof::%{_ent}%}
    stop

function clearMobs():
    set {_amountdespawned} to 0
    set {_amountdead} to 0
    loop {more.mobs.despawnsys::*}:
        if loop-value is alive:
            if difference between now and {more.mob.timer::%loop-value%} is higher than or equal to 5 minutes:
                kill loop-value
                add 1 to {_amountdespawned}
                clear {more.mob.timer::%loop-value%}
                set {more.nodrops.%loop-value%} to true
                remove loop-value from {more.mobs.despawnsys::*}
                clear {more.mobs.despawn.uuids::%uuid of loop-value%}
                wait 1 tick
        else:
            clear {more.mob.timer::%loop-value%}
            remove loop-value from {more.mobs.despawnsys::*}
            clear {more.mobs.despawn.uuids::%uuid of loop-value%}
            add 1 to {_amountdead}
        wait 1 tick
    loop {more.mobs::debug::*}:
        send "{@logo} &fDebug Message - &eDespawned mobs: &a%{_amountdespawned}% &f| &eCleared empty: &a%{_amountdead}%" to loop-value

function summonMob(l: location, m: text):
    if {_m} is "firedemon":
        spawn a skeleton at location of {_l}
        set name of the last spawned skeleton to "{@firedemon-name}"
        apply speed 1 without any particles to the last spawned skeleton for 9999 minutes
        apply strength 1 without any particles to the last spawned skeleton for 9999 minutes
        apply fire resistance 2 without any particles to the last spawned skeleton for 9999 minutes
        ignite the last spawned skeleton for 9999 minutes
        set max health of last spawned skeleton to {@firedemon-health}
        heal the last spawned skeleton
        set {_chestplate} to leather chestplate
        dye {_chestplate} red
        set {_leggings} to leather leggings
        dye {_leggings} black
        set {_boots} to leather boots
        dye {_boots} red
        set chestplate of last spawned skeleton to {_chestplate} with name "&cDemon Chestplate"
        set leggings of last spawned skeleton to {_leggings} with name "&cDemon Leggings"
        set boots of last spawned skeleton to {_boots} with name "&cDemon Boots"
        set tool of last spawned skeleton to wooden sword
        set {_p} to "Wither_Skeleton" parsed as offline player
        set the helmet of last spawned skeleton to {_p}'s skull
        set {_euid} to uuid of last spawned entity
        addEntity({_euid}, last spawned entity)
        set {more.mobs::typeof::%last spawned entity's uuid%} to "%{_m}%"
        stop
    else if {_m} is "skeletonhorse":
        spawn an skeleton horse at {_l}
        set name of the last spawned entity to "{@skeletonhorse-name}"
        stop
    else if {_m} is "wraith":
        spawn a skeleton at location of {_l}
        set name of the last spawned skeleton to "{@wraith-name}"
        set {_p} to "Wither_Skeleton" parsed as offline player
        set the helmet of last spawned skeleton to {_p}'s skull
        set tool of last spawned skeleton to wooden hoe
        set {_chestplate} to leather chestplate
        dye {_chestplate} black
        delete leggings of last spawned skeleton
        delete boots of last spawned skeleton
        set chestplate of last spawned skeleton to {_chestplate} with name "&8Wraith Chestplate"
        apply invisibility 1 without any particles to last spawned skeleton for 9999 minutes
        set last spawned skeleton's max health to {@wraith-health}
        apply strength 2 without any particles to last spawned skeleton for 9999 minutes
        heal the last spawned skeleton

        set {_euid} to uuid of last spawned entity
        addEntity({_euid}, last spawned entity)
        set {more.mobs::typeof::%last spawned entity's uuid%} to "%{_m}%"
        stop
    else if {_m} is "greatgolem":
        spawn an iron golem at {_l}
        set name of the last spawned iron golem to "{@greatgolem-name}"

        set {_euid} to uuid of last spawned entity
        addEntity({_euid}, last spawned entity)
        set {more.mobs::typeof::%last spawned entity's uuid%} to "%{_m}%"
        stop
    else if {_m} is "megazombie":
        spawn an giant at {_l}
        set name of the last spawned giant to "{@megazombie-name}"

        set {_euid} to uuid of last spawned entity
        addEntity({_euid}, last spawned entity)
        set {more.mobs::typeof::%last spawned entity's uuid%} to "%{_m}%"
        stop
    else if {_m} is "zombiehorse":
        spawn an undead horse at {_l}
        set name of the last spawned entity to "{@zombiehorse-name}"
        stop
    else if {_m} is "firerat":
        spawn an silverfish at {_l}
        set name of the last spawned silverfish to "{@firerat-name}"
        apply fire resistance 1 without any particles to the last spawned silverfish for 9999 minutes
        ignite the last spawned silverfish for 9999 minutes
        apply strength 3 without any particles to the last spawned silverfish for 9999 minutes
        set max health of last spawned silverfish to {@firerat-health}
        heal the last spawned silverfish

        set {_euid} to uuid of last spawned entity
        addEntity({_euid}, last spawned entity)
        set {more.mobs::typeof::%last spawned entity's uuid%} to "%{_m}%"
        stop
    else if {_m} is "ogre":
        spawn a zombie at {_l}
        set name of the last spawned zombie to "{@ogre-name}"
        apply speed 1 without any particles to the last spawned zombie for 9999 minutes
        apply strength 2 without any particles to the last spawned zombie for 9999 minutes
        set max health of last spawned zombie to {@ogre-health}
        heal the last spawned zombie
        set {_chestplate} to leather chestplate
        dye {_chestplate} green
        set {_leggings} to leather leggings
        dye {_leggings} green
        set {_boots} to leather boots
        dye {_boots} green
        set chestplate of the last spawned zombie to {_chestplate} with name "&aOgre Chestplate"
        set leggings of the last spawned zombie to {_leggings} with name "&aOgre Leggings"
        set boots of the last spawned zombie to {_boots} with name "&cDemon Boots"

        set {_euid} to uuid of last spawned entity
        addEntity({_euid}, last spawned entity)
        set {more.mobs::typeof::%last spawned entity's uuid%} to "%{_m}%"
        stop
    else if {_m} is "witheredspider":
        spawn a spider at {_l}
        set name of the last spawned spider to "{@witheredspider-name}"
        apply speed 1 without any particles to the last spawned spider for 9999 minutes
        apply strength 1 without any particles to the last spawned spider for 9999 minutes
        apply invisibility 1 without any particles to the last spawned spider for 9999 minutes
        set glowing of last spawned spider to true
        set max health of last spawned spider to {@witheredspider-health}
        heal last spawned spider

        set {_euid} to uuid of last spawned entity
        addEntity({_euid}, last spawned entity)
        set {more.mobs::typeof::%last spawned entity's uuid%} to "%{_m}%"
        stop
    else if {_m} is "firespider":
        spawn a spider at {_l}
        set name of the last spawned spider to "{@firespider-name}"
        apply fire resistance 1 without any particles to the last spawned spider for 9999 minutes
        ignite the last spawned spider for 9999 minutes
        apply speed 1 without any particles to the last spawned spider for 9999 minutes
        apply strength 1 without any particles to the last spawned spider for 9999 minutes
        set max health of last spawned spider to {@witheredspider-health}
        heal last spawned spider

        set {_euid} to uuid of last spawned entity
        addEntity({_euid}, last spawned entity)
        set {more.mobs::typeof::%last spawned entity's uuid%} to "%{_m}%"
        stop
    else if {_m} is "megacreeper":
        spawn a creeper at {_l}
        charge the last spawned creeper
        set name of the last spawned creeper to "{@megacreeper-name}"
        apply fire resistance 2 without any particles to the last spawned creeper for 9999 minutes
        set max health of last spawned creeper to {@megacreeper-health}
        heal last spawned creeper

        set {_euid} to uuid of last spawned entity
        addEntity({_euid}, last spawned entity)
        set {more.mobs::typeof::%last spawned entity's uuid%} to "%{_m}%"
        stop
    else if {_m} is "flyingcreeper":
        spawn a creeper at {_l}
        set name of the last spawned creeper to "{@flyingcreeper-name}"
        set max health of last spawned creeper to {@flyingcreeper-health}
        set {_crep} to last spawned creeper
        heal last spawned creeper
        wait 1 ticks
        spawn 1 bat at {_l}
        set {_bat} to last spawned bat
        wait 3 ticks
        make {_crep} ride {_bat}
        apply invisibility 1 without any particles to {_bat} for 9999 minutes

        set {_euid} to uuid of {_crep}
        addEntity({_euid}, {_crep})
        set {_euid} to uuid of {_bat}
        addEntity({_euid}, {_bat})
        set {_uuid} to uuid of {_crep}
        set {more.mobs::typeof::%{_uuid}%} to "%{_m}%"
        stop
    else if {_m} is "flyingwitch":
        spawn a witch at {_l}
        set name of the last spawned witch to "{@flyingwitch-name}"
        set max health of last spawned witch to {@flyingwitch-health}
        set {_wit} to last spawned witch
        heal last spawned witch
        wait 1 ticks

        spawn 1 bat at {_l}
        set {_bat} to last spawned bat
        wait 3 ticks
        make {_wit} ride {_bat}
        apply invisibility 1 without any particles to {_bat} for 9999 minutes

        set {_euid} to uuid of {_wit}
        addEntity({_euid}, {_wit})
        set {_euid} to uuid of {_bat}
        addEntity({_euid}, {_bat})
        set {_uuid} to uuid of {_wit}
        set {more.mobs::typeof::%{_uuid}%} to "%{_m}%"
        stop


#=============================================
# Mobs
#=============================================


#Fire Demon | Skeleton Horse | Wraith
on spawn of a skeleton:
    if {@firedemon} is true:
        chance of 1%:
            cancel event
            summonMob(location of event-entity, "firedemon")
            stop
    if {@skeletonhorse} is true:
        chance of 2%:
            cancel event
            summonMob(location of event-entity, "skeletonhorse")
            stop
    if {@wraith} is true:
        chance of 3%:
            cancel event
            summonMob(location of event-entity, "wraith")
            stop
    if {@greatgolem} is true:
        chance of 3%:
            cancel event
            wait 1 tick
            stop

#Giant and Zombie Horse
on spawn of a zombie:
    if {@megazombie} is true:
        chance of 2%:
            cancel event
            summonMob(location of event-entity, "megazombie")
            stop
    if {@zombiehorse} is true:
        chance of 2%:
            cancel event
            summonMob(location of event-entity, "zombiehorse")
            stop
    if {@firerat} is true:
        chance of 10%:
            cancel event
            summonMob(location of event-entity, "firerat")
            stop
    if {@ogre} is true:
        chance of 7%:
            cancel event
            summonMob(location of event-entity, "ogre")
            stop

#Withered Spider | Fire Spider | Hell Hound
on spawn of a spider:
    if {@witheredspider} is true:
        chance of 3%:
            cancel event
            summonMob(location of event-entity, "witheredspider")
            stop
    if {@firespider} is true:
        chance of 3%:
            cancel event
            summonMob(location of event-entity, "firespider")
            stop

#Mega Creeper and Flying Creeper
on spawn of a creeper:
    if {@megacreeper} is true:
        chance of 3%:
            cancel event
            summonMob(location of event-entity, "megacreeper")
            stop
    if {@flyingcreeper} is true:
        chance of 4%:
            cancel event
            summonMob(location of event-entity, "flyingcreeper")
            stop


#Flying Witch
on spawn of a witch:
    if {@flyingwitch} is true:
        chance of 7%:
            cancel event
            summonMob(location of event-entity, "flyingwitch")
            stop
#=============================================
# Despawning Mobs
#=============================================

every 5 minutes:
    clearMobs()

on death:
    if {more.mobs.despawn.uuids::%uuid of victim%} is set:
        clear {more.mobs.despawn.uuids::%uuid of victim%}
        clear {more.mob.timer::%victim%}
        remove victim from {more.mobs.despawnsys::*}
    if {more.nodrops.%victim%} is set:
        clear {more.nodrops.%victim%}
        clear drops
    else:
        if victim's name is "{@firedemon-name}" or "{@wraith-name}" or "{@greatgolem-name}" or "{@megazombie-name}" or "{@zombiehorse-name}" or "{@skeletonhorse-name}" or "{@firerat-name}" or "{@ogre-name}" or "{@witheredspider-name}" or "{@firespider-name}" or "{@megacreeper-name}" or "{@flyingcreeper-name}" or "{@flyingwitch-name}":
            if victim is not a player:
                clear drops
                set {_uuid} to victim's uuid
                giveDrops("%{_uuid}%", victim's name, location of victim)
                stop


#=============================================
# Commands
#=============================================
every 2 seconds:
    loop {more.mobs::debug::*}:
        send action bar "&eAlive Custom Mobs: &a%size of {more.mobs.despawnsys::*}%" to loop-value


command /moremobs [<text>]:
    aliases: /mm, /moremob, /mmobs
    permission: moremobs.admin
    trigger:
        if arg 1 is not set:
            send "{@logo} &aAvailable commands:" to player
            send "&e/moremobs debug &7- shows you amount of alive custom mobs and when they get despawned" to player
            send "&e/moremobs clear &7- kills all currently alive custom mobs" to player
            stop
        else:
            if arg 1 is "debug":
                if {more.mobs::debug::%player%} is not set:
                    set {more.mobs::debug::%player%} to player
                    send "{@logo} &aYou will now receive debug action bar" to player
                    stop
                else:
                    clear {more.mobs::debug::%player%}
                    send "{@logo} &eYou will no longer receive debug action bar" to player
                    stop
            if arg 1 is "clear":
                clearMobs()
				
command /spawncustommob:
	permission: sys.rank.aesir
	trigger:
		summonMob(location of event-entity, "wraith")